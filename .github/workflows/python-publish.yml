# GitHub Actions workflow to build, test, and upload a Python package to PyPI

name: Publish Python Package to PyPI

on:
  push:
    branches:
      - main 

permissions:
  contents: write

jobs:
  test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install system dependencies (GDAL, Proj, etc.)
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev proj-bin proj-data libproj-dev \
                                  libgeos-dev libspatialindex-dev build-essential \
                                  python3-dev python3-pip python3-venv

      - name: Auto-bump version
        run: |
          poetry version patch 
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Auto-increment version"
          git push

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install poetry pytest build
          poetry install --no-root
          poetry run pip install fiona geemap pyspark

      # - name: Run tests
      #   run: |
      #     PYTHONPATH=src poetry run pytest -s tests/

      - name: Build package distributions
        run: |
          python -m build

      - name: Upload built distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: test-build  

    permissions:
      id-token: write  

    steps:
      - name: Retrieve built distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/